{"version":3,"file":"soonaverse.cjs.production.min.js","sources":["../src/interfaces/models/award.ts","../src/interfaces/models/collection.ts","../src/interfaces/models/proposal.ts","../src/interfaces/models/transaction.ts","../node_modules/regenerator-runtime/runtime.js","../src/index.ts"],"sourcesContent":["import { BaseRecord, BaseSubCollection, FileMetedata, Timestamp } from \"./base\";\r\n\r\nexport enum AwardType {\r\n  PARTICIPATE_AND_APPROVE = 0,\r\n  DISCORD_ACTIVITY = 1,\r\n  GITHUB_ACTIVITY = 2,\r\n  CUSTOM = 3\r\n}\r\n\r\nexport interface AwardParticipant extends BaseSubCollection {\r\n  uid: string;\r\n  comment?: string;\r\n  completed: boolean;\r\n  createdOn: Timestamp;\r\n  count: number;\r\n  xp: number;\r\n}\r\n\r\nexport interface AwardOwner extends BaseSubCollection {\r\n  uid: string;\r\n  createdOn: Timestamp;\r\n}\r\n\r\nexport interface Award extends BaseRecord {\r\n  name: string;\r\n  description: string;\r\n  space: string;\r\n  type: AwardType;\r\n  endDate: Timestamp;\r\n  owners: {\r\n    [propName: string]: AwardOwner;\r\n  };\r\n  participants: {\r\n    [propName: string]: AwardParticipant;\r\n  },\r\n  badge: {\r\n    name: string;\r\n    description: string;\r\n    image: FileMetedata;\r\n    count: number;\r\n    xp: number;\r\n  },\r\n  issued: number;\r\n  approved: boolean;\r\n  rejected: boolean;\r\n}\r\n","import { BaseRecord, EthAddress, Timestamp } from \"./base\";\r\n\r\nexport enum CollectionType {\r\n  CLASSIC = 0,\r\n  GENERATED = 1,\r\n  SFT = 2\r\n}\r\n\r\nexport enum CollectionAccess {\r\n  OPEN = 0,\r\n  MEMBERS_ONLY = 1,\r\n  GUARDIANS_ONLY = 2,\r\n  MEMBERS_WITH_BADGE = 3,\r\n  MEMBERS_WITH_NFT_FROM_COLLECTION = 4\r\n}\r\n\r\nexport interface DiscountLine {\r\n  xp: number;\r\n  amount: number;\r\n}\r\n\r\nexport enum Categories {\r\n  COLLECTIBLE = 'COLLECTIBLE',\r\n  PFP = 'PFP',\r\n  PHOTOGRAPHY = 'PHOTOGRAPHY',\r\n  ANIMATION = 'ANIMATION',\r\n  THREE_D = '3D',\r\n  GENERATIVE = 'GENERATIVE',\r\n  SINGLE = 'SINGLE',\r\n  INTERACTIVE = 'INTERACTIVE',\r\n  ABSTRACT = 'ABSTRACT',\r\n  PIXELART = 'PIXELART',\r\n  GAME = 'GAME',\r\n  ART = 'ART'\r\n}\r\n\r\nexport interface CollectionBase extends BaseRecord {\r\n  name: string;\r\n  description: string;\r\n  bannerUrl: string;\r\n  royaltiesFee: number;\r\n  royaltiesSpace: EthAddress;\r\n  discounts: DiscountLine[];\r\n  total: number;\r\n  sold: number;\r\n  discord: string;\r\n  url: string;\r\n  twitter: string;\r\n  approved: boolean;\r\n  rejected: boolean;\r\n  limitedEdition?: boolean;\r\n}\r\n\r\nexport interface Collection extends CollectionBase {\r\n  category: Categories,\r\n  type: CollectionType,\r\n  access: CollectionAccess,\r\n  accessAwards: string[],\r\n  accessCollections: string[],\r\n  space: string;\r\n  availableFrom: Timestamp;\r\n  price: number;\r\n  onePerMemberOnly: boolean;\r\n  placeholderNft: EthAddress;\r\n  placeholderUrl: string;\r\n}\r\n\r\nexport interface SchemaCollection extends CollectionBase {\r\n  category?: Categories,\r\n  type?: CollectionType,\r\n  access?: CollectionAccess,\r\n  accessAwards?: string[],\r\n  accessCollections?: string[],\r\n  space?: string;\r\n  availableFrom?: Timestamp;\r\n  price?: number;\r\n  onePerMemberOnly?: boolean;\r\n  placeholderNft?: EthAddress;\r\n}\r\n","import { Base, BaseRecord, BaseSubCollection, Timestamp } from './base';\r\nexport enum ProposalType {\r\n  NATIVE = 0,\r\n  MEMBERS = 1\r\n}\r\n\r\nexport enum ProposalSubType {\r\n  ONE_ADDRESS_ONE_VOTE = 0,\r\n  ONE_MEMBER_ONE_VOTE = 1,\r\n  REPUTATION_BASED_ON_SPACE = 2,\r\n  REPUTATION_BASED_ON_AWARDS = 3,\r\n  QUADRATIC_BASED_ON_SPACE = 4,\r\n  QUADRATIC_BASED_ON_BADGE = 5,\r\n  REPUTATION_BASED_ON_SPACE_WITH_ALLIANCE = 6,\r\n}\r\n\r\nexport interface ProposalMember extends BaseSubCollection {\r\n  uid: string;\r\n  voted?: boolean;\r\n  values?: number[];\r\n  createdOn: Timestamp;\r\n}\r\n\r\nexport interface NativeProposalSettings {\r\n  milestoneIndexCommence: number;\r\n  milestoneIndexStart: number;\r\n  milestoneIndexEnd: number;\r\n}\r\n\r\nexport interface MembersProposalSettings {\r\n  startDate: Timestamp;\r\n  endDate: Timestamp;\r\n  guardiansOnly: boolean;\r\n}\r\n\r\nexport type ProposalSettings = NativeProposalSettings | MembersProposalSettings;\r\n\r\nexport interface ProposalAnswer extends Base {\r\n  text: string;\r\n  value: number;\r\n  additionalInfo: string;\r\n}\r\n\r\nexport interface ProposalQuestion extends Base {\r\n  text: string;\r\n  additionalInfo: string;\r\n  answers: ProposalAnswer[];\r\n}\r\n\r\nexport interface Proposal extends BaseRecord {\r\n  uid: string;\r\n  name: string;\r\n  additionalInfo?: string;\r\n  space: string;\r\n  members?: {\r\n    [propName: string]: ProposalMember;\r\n  };\r\n  description: string;\r\n  type: ProposalType;\r\n  subType: ProposalSubType;\r\n  approved?: boolean;\r\n  rejected?: boolean;\r\n  eventId?: string;\r\n  owners: {\r\n    // Owner / from date\r\n    [propName: string]: Date;\r\n  };\r\n  // TODO Fix typing here.\r\n  settings: any;\r\n  totalWeight?: number;\r\n  questions: ProposalQuestion[];\r\n  results?: any;\r\n  // Consolidate NATIVE.\r\n  // results?: {\r\n  //   total: number;\r\n  //   voted: number;\r\n  //   answers: {\r\n  //     [propName: number]: number;\r\n  //   }\r\n  // }\r\n}\r\n","import { BaseRecord, EthAddress, FileMetedata, IotaAddress, Timestamp } from './base';\r\nexport const TRANSACTION_AUTO_EXPIRY_MS = 4 * 60 * 1000;\r\nexport const TRANSACTION_MAX_EXPIRY_MS = 3 * 24 * 60 * 60 * 1000;\r\nexport enum TransactionType {\r\n  BADGE = \"BADGE\",\r\n  VOTE = \"VOTE\",\r\n  PLEDGE = \"PLEDGE\",\r\n  ORDER = \"ORDER\",\r\n  PAYMENT = \"PAYMENT\",\r\n  BILL_PAYMENT = \"BILL_PAYMENT\",\r\n  CREDIT = \"CREDIT\"\r\n}\r\n\r\nexport enum TransactionOrderType {\r\n  NFT_PURCHASE = \"NFT_PURCHASE\",\r\n  NFT_BID = \"NFT_BID\",\r\n  SPACE_ADDRESS_VALIDATION = \"SPACE_ADDRESS_VALIDATION\",\r\n  MEMBER_ADDRESS_VALIDATION = \"MEMBER_ADDRESS_VALIDATION\",\r\n}\r\n\r\nexport enum TransactionValidationType {\r\n  ADDRESS_AND_AMOUNT,\r\n  ADDRESS\r\n}\r\n\r\nexport interface VoteTransaction {\r\n  proposalId: string;\r\n  votes: string[];\r\n}\r\n\r\nexport interface WalletResult {\r\n  createdOn: Timestamp;\r\n  processedOn: Timestamp;\r\n  chainReference?: string|null;\r\n  chainReferences?: string[];\r\n  error?: any|null;\r\n  confirmed: boolean;\r\n  count: number;\r\n}\r\n\r\nexport interface BadgeTransaction {\r\n  award: string;\r\n  name: string;\r\n  image: FileMetedata,\r\n  description: string;\r\n  xp: number;\r\n}\r\n\r\nexport interface OrderTransaction {\r\n  amount: number;\r\n  targetAddress: IotaAddress;\r\n  type: TransactionOrderType;\r\n  reconciled: boolean;\r\n  void: boolean;\r\n  nft?: EthAddress;\r\n  beneficiary?: 'space' | 'member',\r\n  beneficiaryUid?: EthAddress,\r\n  beneficiaryAddress?: IotaAddress,\r\n  royaltiesFee?: number;\r\n  royaltiesSpace?: EthAddress;\r\n  royaltiesSpaceAddress?: IotaAddress;\r\n  expiresOn: Timestamp;\r\n  validationType: TransactionValidationType;\r\n  collection?: EthAddress;\r\n}\r\n\r\nexport interface PaymentTransaction {\r\n  amount: number;\r\n  sourceAddress: IotaAddress;\r\n  targetAddress: IotaAddress;\r\n  reconciled: boolean;\r\n  void: boolean;\r\n  chainReference: string;\r\n  walletReference: WalletResult;\r\n  sourceTransaction: string;\r\n  nft?: EthAddress;\r\n  collection?: EthAddress;\r\n  invalidPayment: boolean;\r\n}\r\n\r\nexport interface BillPaymentTransaction {\r\n  amount: number;\r\n  sourceAddress: IotaAddress;\r\n  targetAddress: IotaAddress;\r\n  reconciled: boolean;\r\n  void: boolean;\r\n  previusOwnerEntity?: 'space' | 'member',\r\n  previusOwner?: EthAddress,\r\n  chainReference: string;\r\n  walletReference: WalletResult;\r\n  sourceTransaction: string;\r\n  nft?: EthAddress;\r\n  royalty: boolean,\r\n  collection?: EthAddress;\r\n}\r\n\r\nexport interface CreditPaymentTransaction {\r\n  amount: number;\r\n  sourceAddress: IotaAddress;\r\n  targetAddress: IotaAddress;\r\n  reconciled: boolean;\r\n  void: boolean;\r\n  chainReference: string;\r\n  walletReference: WalletResult;\r\n  sourceTransaction: string;\r\n  nft?: EthAddress;\r\n  collection?: EthAddress;\r\n}\r\n\r\nexport interface Transaction extends BaseRecord {\r\n  type: TransactionType;\r\n  member?: EthAddress;\r\n  space?: EthAddress;\r\n  linkedTransactions: EthAddress[];\r\n  payload: any; // VoteTransaction|BadgeTransaction|OrderTransaction|PaymentTransaction|BillPaymentTransaction|CreditPaymentTransaction;\r\n}\r\n\r\nexport interface TransactionBillPayment extends Transaction {\r\n  payload: BillPaymentTransaction;\r\n}\r\n\r\nexport interface TransactionOrder extends Transaction {\r\n  payload: OrderTransaction;\r\n}\r\n\r\nexport interface TransactionCredit extends Transaction {\r\n  payload: CreditPaymentTransaction;\r\n}\r\n\r\nexport interface TransactionPayment extends Transaction {\r\n  payload: PaymentTransaction;\r\n}\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { Observable } from 'rxjs';\r\nimport { initializeApp, FirebaseApp } from 'firebase/app';\r\nimport { Firestore, limit } from 'firebase/firestore'\r\nimport { getFirestore, collection, getDocs, getDoc, doc, \r\n         DocumentData, CollectionReference, query, where, onSnapshot } from 'firebase/firestore';\r\nimport { Collection, Transaction, TransactionType } from './interfaces/models';\r\nimport { COL } from './interfaces/models/base';\r\nimport { Nft } from './interfaces/models/nft';\r\nimport { Member } from './interfaces/models/member';\r\n\r\n/**\r\n * Public class to interact with Soonaverse.\r\n */\r\nexport class Soon {\r\n  public static app: FirebaseApp;\r\n  /**\r\n   * We connect to soonaverse as part of the contract. We only create one connection.\r\n   */\r\n  constructor() {\r\n    if (!Soon.app) {\r\n      Soon.app = initializeApp({\r\n        apiKey: \"AIzaSyB4fcG8rtNWAiAtSmxmK3q3JLfMvtNCGP4\",\r\n        projectId: \"soonaverse\"\r\n      });\r\n    }\r\n  }\r\n\r\n  private collectionRef(): CollectionReference<DocumentData> {\r\n    return collection(this.db(), COL.COLLECTION);\r\n  }\r\n\r\n  private memberRef(): CollectionReference<DocumentData> {\r\n    return collection(this.db(), COL.MEMBER);\r\n  }\r\n\r\n  private nftRef(): CollectionReference<DocumentData> {\r\n    return collection(this.db(), COL.NFT);\r\n  }\r\n\r\n  private transactionRef(): CollectionReference<DocumentData> {\r\n    return collection(this.db(), COL.TRANSACTION);\r\n  }\r\n\r\n  /**\r\n   * Get current NFT record.\r\n   * \r\n   * @returns Nft\r\n   */\r\n  public async getNft(nftId: string): Promise<Nft> {\r\n    const nftDoc = doc(this.nftRef(), nftId.toLowerCase());\r\n    const nftSnapshot = await getDoc(nftDoc);\r\n    return <Nft>nftSnapshot.data();\r\n  }\r\n\r\n  /**\r\n   * Get all NFTs for the given collection ids.\r\n   * \r\n   * @returns Collection\r\n   */\r\n   public async getNftsByCollections(collectionIds: string[]): Promise<Nft[]> {\r\n    if (collectionIds.length > 10) {\r\n      throw new Error('Max 10 collections can be queried at once.');\r\n    }\r\n\r\n    const nftDoc = query(this.nftRef(), where(\"hidden\", \"==\", false), where('collection', 'in', collectionIds));\r\n    const nftSnapshot = await getDocs(nftDoc);\r\n    const nftList = <Nft[]>nftSnapshot.docs.map(doc => doc.data());\r\n    return nftList;\r\n  }\r\n  \r\n  /**\r\n   * Get Discord Usernames for the given list of ethaddresses.\r\n   * \r\n   * @param ethAddresses string[] eth Addresses to search.\r\n   *\r\n   * @returns string[]\r\n   */\r\n  public async getDiscordbyEthAddr(ethAddresses: string[]): Promise<Member[]> {\r\n\tif (ethAddresses.length > 10) {\r\n\t\tthrow new Error('Max 10 addresses can be queried at once.');\r\n\t}\r\n\t\r\n\tlet discordtags:any[] = new Array();\r\n\tconst memberDoc = query(this.memberRef(), where('uid', 'in', ethAddresses));\r\n    const memberSnapshot = await getDocs(memberDoc);\r\n    const memberList = <Member[]>memberSnapshot.docs.map(doc => doc.data());\r\n\r\n    memberList.forEach(member => {\r\n        discordtags.push(member.discord);\r\n    });\r\n\t\r\n\treturn discordtags;\r\n  }\r\n\r\n  /**\r\n   * Get ranking for the given collection ids.\r\n   * \r\n   * @returns Collection\r\n   */\r\n   public async getRankingByCollections(collectionIds: string[], top: number): Promise<any> {\r\n    if (collectionIds.length > 10) {\r\n      throw new Error('Max 10 collections can be queried at once.');\r\n    }\r\n\r\n    const nftDoc = query(this.nftRef(), where(\"hidden\", \"==\", false), where('collection', 'in', collectionIds));\r\n    const nftSnapshot = await getDocs(nftDoc);\r\n    const nftList = <Nft[]>nftSnapshot.docs.map(doc => doc.data());\r\n\r\n    let ranking = nftList.reduce((accumulator, { owner }) => {\r\n      const uid = owner || '';\r\n\r\n      if (accumulator.find(record => record.uid === owner) === undefined) {\r\n        accumulator.push({ uid, count: 0, rank: undefined });\r\n      }\r\n\r\n      let record = accumulator.find(record => record.uid === owner);\r\n\r\n      if (record !== undefined) {\r\n        record.count++;\r\n      }\r\n\r\n      return accumulator;\r\n    }, Array<{ count: number; uid: string; rank?: number; }> ());\r\n\r\n    ranking = ranking.sort((a, b) => b.count - a.count).slice(0, top);\r\n\r\n    const memberUidChunks = ranking.reduce((accumulator, { uid }, currentIndex) => {\r\n      const index = Math.floor(currentIndex / 10);\r\n\r\n      accumulator[index] = accumulator[index] || [];\r\n      accumulator[index].push(uid);\r\n\r\n      return accumulator;\r\n    }, Array<Array<string>> ());\r\n    \r\n    let members:any[] = new Array();\r\n\r\n    await Promise.all(memberUidChunks.map(async (uid) => {\r\n      const memberDoc = query(this.memberRef(), where('uid', 'in', uid));\r\n      const memberSnapshot = await getDocs(memberDoc);\r\n      const memberList = <Member[]>memberSnapshot.docs.map(doc => doc.data());\r\n\r\n      memberList.forEach(member => {\r\n        members.push({ uid: member.uid, member: member.name });\r\n      });\r\n    }));\r\n\r\n    members.forEach(member => {\r\n      Object.assign(ranking.find((ranking) => ranking.uid === member.uid), member);\r\n    });\r\n\r\n    ranking.forEach((record, index) =>  {\r\n      record.rank = index + 1;\r\n    });\r\n\r\n    return ranking;\r\n  }\r\n\r\n  /**\r\n   * Get current Collection record.\r\n   * \r\n   * @returns Collection\r\n   */\r\n  public async getCollection(collection: string): Promise<Collection> {\r\n    const collectionDoc = doc(this.collectionRef(), collection.toLowerCase());\r\n    const collectionSnapshot = await getDoc(collectionDoc);\r\n    return <Collection>collectionSnapshot.data();\r\n  }\r\n\r\n  /**\r\n   * Get all NFTs owned by ETH address\r\n   * \r\n   * @returns Nft[] Array of all nfts.\r\n   */\r\n  public async getNftsByEthAddress(ethAddress: string): Promise<Nft[]> {\r\n    const q = query(this.nftRef(), where('hidden', '==', false), where('owner', '==', ethAddress.toLowerCase()));\r\n    const nftSnapshot = await getDocs(q);\r\n    const nftList = <Nft[]>nftSnapshot.docs.map(doc => doc.data());\r\n    return nftList;\r\n  }\r\n\r\n  /**\r\n   * Listen to changes on a particular NFT\r\n   * \r\n   * @return Nft Latest NFT record.\r\n   */\r\n  public onNft(nftId: string): Observable<Nft|undefined> {\r\n    return new Observable((observe) => {\r\n      const unsub = onSnapshot(doc(this.nftRef(), nftId.toLowerCase()), { includeMetadataChanges: true }, (o) => {\r\n        observe.next(<Nft|undefined>o.data());\r\n      });\r\n\r\n      // Provide a way of canceling and disposing the interval resource\r\n      return function unsubscribe() {\r\n        unsub();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listen to changes on a particular Collection\r\n   * \r\n   * @return Collection Latest Collection record.\r\n   */\r\n  public onCollection(collectionId: string): Observable<Collection|undefined> {\r\n    return new Observable((observe) => {\r\n      const unsub = onSnapshot(doc(this.nftRef(), collectionId.toLowerCase()), { includeMetadataChanges: true }, (o) => {\r\n        observe.next(<Collection|undefined>o.data());\r\n      });\r\n\r\n      // Provide a way of canceling and disposing the interval resource\r\n      return function unsubscribe() {\r\n        unsub();\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listen to all new payments on Soonaverse\r\n   * \r\n   * @return Nft Latest NFT record.\r\n   */\r\n  public onValidPayment(): Observable<Transaction[]> {\r\n    return new Observable((observe) => {\r\n      const q = query(\r\n        this.transactionRef(),\r\n        where('type', '==', TransactionType.PAYMENT),\r\n        where('payload.invalidPayment', '==', false),\r\n        limit(1)\r\n      );\r\n\r\n      const unsub = onSnapshot(q, { includeMetadataChanges: true }, (nftSnapshot) => {\r\n        observe.next(<Transaction[]>nftSnapshot.docs.map(doc => doc.data()));\r\n      });\r\n\r\n      // Provide a way of canceling and disposing the interval resource\r\n      return function unsubscribe() {\r\n        unsub();\r\n      };\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Get all NFTs owned by IOTA address\r\n   * \r\n   * @param iotaAddresses string[] Iota Addresses to search. Max 10 addresses.\r\n   * \r\n   * @returns Nft[] Array of all nfts.\r\n   */\r\n  public async getNftsByIotaAddress(iotaAddresses: string[]): Promise<Nft[]> {\r\n    if (iotaAddresses.length > 10) {\r\n      throw new Error('Max 10 addresses can be queried at once.');\r\n    }\r\n\r\n    // Make them all lower case.\r\n    iotaAddresses = iotaAddresses.map((i) => {\r\n      return i.toLowerCase();\r\n    });\r\n\r\n    const nftList: Nft[] = [];\r\n    const q = query(\r\n      this.transactionRef(), \r\n      where('payload.sourceAddress', 'in', iotaAddresses),\r\n      where('type', '==', TransactionType.PAYMENT),\r\n      where('payload.invalidPayment', '==', false)\r\n    );\r\n    const paymentSnapshot = await getDocs(q);\r\n    for (const pay of paymentSnapshot.docs) {\r\n        if (pay.data().payload.nft && pay.data().member) {\r\n        const nftDoc = doc(this.nftRef(), pay.data().payload.nft);\r\n        const nftSnapshot = await getDoc(nftDoc);\r\n        // Still owner.\r\n        if (nftSnapshot.data()?.owner === pay.data().member) {\r\n          nftList.push(<Nft>nftSnapshot.data());\r\n        }\r\n      }\r\n    }\r\n\r\n    return nftList;\r\n  }\r\n\r\n  private db(): Firestore {\r\n    return getFirestore(Soon.app);\r\n  }\r\n}"],"names":["AwardType","CollectionType","CollectionAccess","Categories","ProposalType","ProposalSubType","TransactionType","TransactionOrderType","TransactionValidationType","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","Soon","app","initializeApp","apiKey","projectId","collectionRef","collection","db","memberRef","nftRef","transactionRef","getNft","nftId","nftDoc","doc","toLowerCase","getDoc","data","getNftsByCollections","collectionIds","query","where","getDocs","nftList","docs","map","getDiscordbyEthAddr","ethAddresses","discordtags","Array","memberDoc","member","discord","getRankingByCollections","top","ranking","reduce","accumulator","owner","uid","find","count","rank","sort","a","b","memberUidChunks","currentIndex","index","Math","floor","members","all","_this","assign","getCollection","collectionDoc","getNftsByEthAddress","ethAddress","q","onNft","Observable","observe","unsub","onSnapshot","_this2","includeMetadataChanges","o","onCollection","collectionId","_this3","onValidPayment","_this4","PAYMENT","limit","nftSnapshot","getNftsByIotaAddress","iotaAddresses","pay","payload","nft","getFirestore"],"mappings":"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"}